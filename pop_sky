# 2013-02-13 17:16 sky_coverage.sm
#---------------------------------------------------------------------------
# histo_exp_wga
histo_exp_wga

	location 6000 31000 7000 31000
	window 1 1 1 1

	data exp_times.dat
	read t_exp 4
	set lg_t_exp = lg(t_exp)

	data exp_times_sky_sel.dat
	read t_exp_sel 4
	set lg_t_exp_sel = lg(t_exp_sel)

	define hstep ? { Step of the log(T) histogram ? }

	set x= 1.0+$hstep/2.,6.0+$hstep/2.,$hstep

	set ht   =histogram(lg_t_exp:x)
	set htsel=histogram(lg_t_exp_sel:x)

	limits x ht 
	limits x -10 200
	ticksize -1 0 0 0 
	ctype 2 expand 1.5
	box
	xlabel log(T_{exp}) [sec]
	ylabel \# of PSPC fields

	ltype 0
	histogram x ht 
	ltype 1
	histogram x htsel 
	ltype 0

#---------------------------------------------------------------------------
# sky_wga
sky_wga	

	define boh ? {* Did you already run "histo_exp_wga" ? [y/n]}

	if(substr('$boh',0,1) != 'y') { return }

	location 6000 31000 7000 31000
	window 1 1 1 1

	data exp_times.dat
	read t_exp 4
	set lg_t_exp = lg(t_exp)
	
	define cts4det ? { Counts for detection ? }
	if(!$?convfac) { define convfac (1.5e-11) }   # 3.e-11 ?
	define convfac ? { Cts/Sec --> 0.1-2.4 Flux Conversion Factor ? }
	define pspc_area ? { Single PSPC FOV area ? [deg^2] }

	set cps     = $cts4det/10.**x
	set flux    = cps*$convfac
	set flux    = reverse(flux)
	set lg_flux = lg(flux)
	set rht     = reverse(ht)
	set sky_cum = cumulate(rht)
	set sky_cum = $pspc_area*sky_cum

	define checkbox ? { Plot box [y/n] ? }
	if(substr('$checkbox',0,1) == 'y' ) { 
           limits lg_flux sky_cum
           limits -16 -9 sky_cum
           ticksize -1 0 0 0 
           ctype 2 expand 1.5
           box
           xlabel PSPC 0.1-2.4 Flux [erg/cm^2/sec]
           ylabel Sky Covered [deg^2]
	}

	ltype 2 
	ctype 3 
	connect  lg_flux sky_cum
	ltype 0
	ctype 2 
	ptype 4 3 
	points lg_flux sky_cum

#------------------------------------------------------------------------------
# sky_sigma
sky_sigma
	
	define node ?  { Node of the sigmoid shape ? }
	define sigma ? { "curvature" of the sigmoid shape ? }

	set xsky = -16,-8,0.1
	set xsky = xsky - $node
	set ysky = $totalsky*0.5*(1. + $sigma*xsky/sqrt(($sigma*xsky)**2. + 1.))

	ctype 4 
	connect (xsky+$node) ysky

#---------------------------------------------------------------------------
# sky_wga_2
sky_wga_2	

	define boh ? {* Did you already run "histo_exp_wga" ? [y/n]}

	if(substr('$boh',0,1) != 'y') { return }

	location 6000 31000 7000 31000
	window 1 1 1 1

	data exp_times.dat
	read t_exp 4
	set lg_t_exp = lg(t_exp)
	
	define cts4det ? { Counts for detection ? }
	if(!$?convfac) { define convfac (1.5e-11) }   # 3.e-11 ?
	define convfac ? { Cts/Sec --> 0.1-2.4 Flux Conversion Factor ? }
	define pspc_area ? { PSPC FOV area ? [deg^2] }

	define newterm ? { Additional term due to OFFSET re-normalization ? }

	set lg_cps  = 0.7*lg($cts4det/10.**x) - 0.7 + $newterm
	set cps  = 10.**lg_cps
	set flux = cps*$convfac
	set flux = reverse(flux)
	set lg_flux = lg(flux)
	set rht = reverse(ht)
	set sky_cum=cumulate(rht)
	set sky_cum=sky_cum
	set sky_cum=$pspc_area*sky_cum

	define checkbox ? { Plot box [y/n] ? }
	if(substr('$checkbox',0,1) == 'y' ) { 
           limits lg_flux sky_cum
           limits -16 -9 sky_cum
           limits -16 -9 -50 3000
           ticksize -1 0 0 0 
           ctype 2 expand 1.5
           box
           xlabel PSPC 0.1-2.4 Flux [erg/cm^2/sec]
           ylabel Sky Covered [deg^2]
	}

	ltype 2 
	ctype 3 
	connect  lg_flux sky_cum
	ltype 0
	ctype 2 
	ptype 4 3 
	points lg_flux sky_cum


#---------------------------------------------------------------------------
# sky_wga_total
sky_wga_total

	define boh ? {* Did you already run "histo_exp_wga" ? [y/n]}

	if(substr('$boh',0,1) != 'y') { return }

	location 6000 31000 7000 31000
	window 1 1 1 1

	data exp_times.dat
	read t_exp 4
	set lg_t_exp = lg(t_exp)
	
	define cts4det ? { Counts for detection ? }
	if(!$?convfac) { define convfac (1.5e-11) }   # 3.e-11 ?
	define convfac ? { Cts/Sec --> 0.1-2.4 Flux Conversion Factor ? }
	echo "------------------------------"
	echo "  [1] < 10 arcmin "
	echo "  [2] < 20 arcmin "
	echo "  [3] < 30 arcmin "
	echo "  [4] < 40 arcmin "
	echo "  [5] < 50 arcmin "
	define  extannulus ? < Select encircled area index : >
	define extannulus ( $extannulus - 1 )

	# set lg_cps  = 0.7*lg($cts4det/10.**x) - 0.7 
	# set lg_cps  = 0.7*lg($cts4det/10.**x) -0.7 +((x-3.8)/2.5)**2.

	set lg_cps  = -3.45 + 2.2*((x-5.5)/3.4)**2

	set rad1      = { 0       10      20      30      40      }
	set rad2      = { 10      20      30      40      50      }
	set pspc_area = { 0.08726 0.26181 0.43633 0.61086 0.78539 }
	# set newterm   = { 0.0     0.12    0.32    0.53    0.76    }
	set newterm   = { 0.0     0.07    0.38    0.63    0.88    }

	#
	# vectors used for the interpolation
	#
	set lg_x      = -16,-9,0.1
	set lg_x      = -16,-9,0.25
	set sky_total = 0.0*lg_x

	define checkbox ? { Plot box [y/n] ? }
	if(substr('$checkbox',0,1) == 'y' ) { 
           limits -16 -9 -50 7500
           ticksize -1 0 0 0 
           ctype 2 expand 1.5
           box
           xlabel PSPC 0.1-2.4 Flux [erg/cm^2/sec]
           ylabel Sky Covered [deg^2]
	}

	ltype 2 
	ctype 3 

	do 1=0,$extannulus {

	   echo ----------------------------------------------
	   echo * Doing $(rad1[$1]) - $(rad2[$1])
	   echo * Corona Area : $(pspc_area[$1]) 
	   echo * Magic Term  : $(newterm[$1])

	   set lg_cps     = lg_cps + $(newterm[$1])
	   set cps        = 10.**lg_cps
	   set flux       = cps*$convfac
	   set flux       = reverse(flux)
	   set lg_flux    = lg(flux)
	   set lg_flux_$1 = lg_flux

	   set rht        = reverse(ht)
	   set sky_cum    = cumulate(rht)
	   set sky_cum_$1 = $(pspc_area[$1])*sky_cum

	   connect lg_flux_$1 sky_cum_$1

	}
	ltype 0 
	ctype 2

	echo ----------------------------------------------
	set real_sky = 0*sky_cum_0

	do 1=0,$extannulus {
	   interp2 lg_flux_$1 sky_cum_$1 lg_x sky_contrib_$1
	   set sky_total = sky_total + sky_contrib_$1
	   set real_sky  = real_sky + sky_cum_$1
	}

	ltype 2 
	ctype 3 
	connect lg_x sky_total
	ltype 0
	ctype 2 
	ptype 4 3 
	points lg_x sky_total

	vecminmax sky_total dum totalsky

	set dimen(flux_out) = $(dimen(sky_total))
	set dimen(area_out) = $(dimen(sky_total))

	set flux_out[0] = lg_x[0]
	set area_out[0] = sky_total[0]
	do 1=1,$(dimen(sky_total)-1) {
	   set flux_out[$1] = lg_x[$1]
	   set area_out[$1] = sky_total[$1] - sky_total[$($1-1)]
	}

#------------------------------------------------------------------------------
# sky_sigma_2 4	: curvatura | normalizzazione | ascissa del "nodo" | exponente
sky_sigma_2 4	#

		location 5500 31000 12000 31000
		ctype 2
		
		set ydum = (-0.05*$2) , (1.05*$2) , 23

		ltype 0
		set a = 0.0,1.0,0.01
		set f = 3.*a - 1.5 + $3
		set x = f - $3
		set y = $2*0.5*(1. + ($1*x)**$4/sqrt(($1*x)**(2*$4) + 1.))
		limits f -0.05 1.05 
		ticksize 0.1 1 0 0
		box
		connect f y

		ltype 1
		relocate -25 0 
		draw 100 0
		relocate -25 $2
		draw 100 $2
		ltype 0

#---------------------------------------------------------------------------
# sky_gauss
sky_gauss

	echo >---------------------------------------------
	echo > integrating a gaussian distribution 
	echo > representing exposure times
	echo > 
	
	define f_node  ? { Peak of the Flux Gaussian ? }
	define f_width ? { Width of the Flux Gaussian ? }

	if(!$?totalsky) { define totalsky ? { Total Sky ? } }

	define f1  -17.0
	define f2   -8.0
	set    f = $f1,$f2,0.1

 	set t1 = (f - $f_node)/(sqrt(2)*$f_width)
 	set t2 = erfc(t1)
 	set gsky_cum = 1 - t2/2.
	set gsky_cum = $totalsky*gsky_cum

	lweight 3 
	ctype 5 
	ltype 2 
	connect f gsky_cum
	ltype 0 
	ctype 2 
	lweight 1 

#------------------------------------------------------------------------------
