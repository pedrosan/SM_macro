#---------------------------------------------------------------------------
# readdata_h
readdata_h

	define whatdata ? { What data: OBS or TRUE [1/2] : }

	if( $whatdata == 1 ) {
	data "Fr_mV/best.B.obs.dat"
	read { bh1 3 bh2 4 bh3 5 bh4 6 bh5 7 bh6 8 bh7 9 bh8 10 }

	data "Fr_mV/best.Rmr.obs.dat"
	read { rh1 3 rh2 4 rh3 5 rh4 6 rh5 7 rh6 8 rh7 9 rh8 10 }

	data "Fr_mV/best.Xmr.obs.dat"
	read { xh1 3 xh2 4 xh3 5 xh4 6 xh5 7 xh6 8 xh7 9 xh8 10 }

	data "Fr_mV/best.X.obs.dat"
	read { rlim 1 optlim 2 }

	set btot = 0.0*bh1
	set rtot = 0.0*rh1
	set xtot = 0.0*xh1
	foreach 1 < b r x > {
	   do 2=1,8 {
	      set $1tot = $1tot + $1h$2
	   }
	}
	} else {
	data "Fr_mV/best.B.true.dat"
	read { bh1 3 bh2 4 bh3 5 bh4 6 bh5 7 bh6 8 bh7 9 bh8 10 }

	data "Fr_mV/best.Rmr.true.dat"
	read { rh1 3 rh2 4 rh3 5 rh4 6 rh5 7 rh6 8 rh7 9 rh8 10 }

	data "Fr_mV/best.Xmr.true.dat"
	read { xh1 3 xh2 4 xh3 5 xh4 6 xh5 7 xh6 8 xh7 9 xh8 10 }

	data "Fr_mV/best.X.true.dat"
	read { rlim 1 optlim 2 }

	set btot = 0.0*bh1
	set rtot = 0.0*rh1
	set xtot = 0.0*xh1
	foreach 1 < b r x > {
	   do 2=1,8 {
	      set $1tot = $1tot + $1h$2
	   }
	}
	}

	define nopt (9)
	define nr $(dimen(rlim)/$nopt)
	set dimen(rval)   = $nr
	set dimen(optval) = $nopt

	do 1=0,$($nr-1) {
	   set rval[$1] = rlim[$($1*$nopt)]
	}

	do 1=0,$($nopt-1) {
	   set optval[$1] = optlim[$1]
	}

	set dimen(optlimaux) = dimen(optlim)
	do 1=0,$(dimen(optval)-1) {
	   do 2=1,$nr {
	      set optlimaux[$($1*$nr+$2-1)] = optval[$1]
	   }
	}

	echo - radio limits are   $nr
	echo - optical limits are $nopt

#---------------------------------------------------------------------------
# selectstrip_tot  plot 3 models predictions, with choice of a_RX intervals
selectstrip_tot

	echo "-----------------------------------------------------------"
	echo " histogram computed for the following intervals of a_RX:"
	echo " [1]     - 8.5  "
	echo " [2] 8.5 - 7.5 "
	echo " [3] 7.5 - 6.5 "
	echo " [4] 6.5 - 5.5 "
	echo " [5] 5.5 - 4.5 "
	echo " [6] 4.5 - 3.5 "
	echo " [7] 3.5 - 2.5  "  
	echo " [8] 2.5 -      "  
	echo "-----------------------------------------------------------"
	define which ?  { Which histogram [1-8] : }
	define colore ? {          Which Colour : }

	define long $(strlen('$which'))
	echo contributing bins are : $long

	set bfh = bh1*0
	set rfh = rh1*0
	set xfh = xh1*0

	if( $long == 1 ) {
	   set bfh = bh$which
	   set rfh = rh$which
	   set xfh = xh$which
	} else {
	   do i=1,$long {
	      define 2 $(substr('$which',$($i-1),1))
	      echo $2
	      set bfh = bfh + bh$2
	      set rfh = rfh + rh$2
	      set xfh = xfh + xh$2
	   }
	}

	location 6000 31000 6000 31000
	window 1 1 1 1
	# define howmany ? { Howmany trial targets ?}
	define width   ? { Number of sigmas-strip to plot ?}

	define limite ? { Plot against Radio [1] or optlim [2] ?}
	if(substr('$limite',0,1) == '1') {
	    define check optval
	    define labx  <Radio Flux [Jy]>

	    define come ? {LOG [1] LIN [2] ? }
	    if(substr('$come',0,1) == '1') {
	      define plotx "(lg(rval))"
	      define xlim1 (lg(0.0008))
	      define xlim2 (lg(1.35))
	      ticksize -1 5 0 0 
	    } else { 
	      define plotx rval
	      define xlim1 0.0008
	      define xlim2 1.35
	      ticksize 0 0 0 0 
	    }
	} else {
	    define plotx optval
	    define check rval
	    define xlim1 23.5
	    define xlim2 16.5
	    ticksize 0.5 1 0 0
	    define labx  <Optical Magnitude>
	}

	print '   %7.3f \n' <$check>
	define checkval ? {which value of the other limiting vector ?}

	if('$plotx' == 'optval') {
	   foreach var { ax ar ab } {
	     set dimen($var) = $nopt
	   }
	   do 1=0,$($nopt-1) {
	     set ab = bfh         if(rlim == $checkval)
	     set ar = rfh         if(rlim == $checkval)
	     set ax = xfh         if(rlim == $checkval)

	     set abtot = btot        if(rlim == $checkval)
	     set artot = rtot        if(rlim == $checkval)
	     set axtot = xtot        if(rlim == $checkval)
           }	      
	}

	if('$plotx' == 'rval' || '$plotx' == '(lg(rval))' ) {
	   foreach var { ax ar ab } {
	     set dimen($var)   = $nr
	   }
	   do 1=0,$($nr-1) {
	     set ab  = bfh         if(optlim == $checkval)
	     set ar  = rfh         if(optlim == $checkval)
	     set ax  = xfh         if(optlim == $checkval)

	     set abtot = btot      if(optlim == $checkval)
	     set artot = rtot      if(optlim == $checkval)
	     set axtot = xtot      if(optlim == $checkval)
           }	      
	}

	set bnfh     = ab
	set rnfh     = ar
	set xnfh     = ax
	set err_bnfh = $width*bnfh*sqrt(1/ab + 1/abtot)
	set err_rnfh = $width*rnfh*sqrt(1/ar + 1/artot)
	set err_xnfh = $width*xnfh*sqrt(1/ax + 1/axtot)

	set bnfh_u = bnfh + err_bnfh
	set bnfh_d = bnfh - err_bnfh
	set rnfh_u = rnfh + err_rnfh 
	set rnfh_d = rnfh - err_rnfh
	set xnfh_u = xnfh + err_xnfh
	set xnfh_d = xnfh - err_xnfh 
	vecminmax bnfh_u a1 b1
	vecminmax rnfh_u a2 b2
	vecminmax xnfh_u a3 b3
	set down = < $a1 $a2 $a3 >
	set up   = < $b1 $b2 $b3 >
	vecminmax up a b

	#
	# plotto 
	#
	expand 1.5 
	lweight 2
	ctype 2
	limits $xlim1 $xlim2 0 $b
	box
	xlabel $labx

	ctype $colore
	expand 2.5
	ptype 4 3 
	lweight 2

	ptype 4 0
	points  $plotx bnfh

	ptype 4 3 
	points  $plotx rnfh

	ptype 3 0
	points  $plotx xnfh

	define checkbrnfhs ? {Plot error on single points [y/n] ?}
	if(substr('$checkbrnfhs',0,1) == 'y') {
	   expand 0.8
	   error_y $plotx bnfh (bnfh_u-bnfh)
	   error_y $plotx rnfh (rnfh_u-rnfh)
	   error_y $plotx xnfh (xnfh_u-xnfh)
	}

	lweight 3
	ltype 1
	connect $plotx xnfh_u 
	connect $plotx xnfh_d
	ltype 2
	connect $plotx rnfh_u
	connect $plotx rnfh_d
	ltype 4
	connect $plotx bnfh_u
	connect $plotx bnfh_d
	ltype 0
	
	ctype 2 

	location 1000 6000 6000 31000
	lweight 2
	angle 90
	relocate ( $($gx1+ 250) $($gy1 + 1750) )
	expand 2.5 ptype 4 0 dot
	expand 1.2 putlabel 6 " Bolometric "

	relocate ( $($gx1+1450) $($gy1 + 1750) )
	expand 2.5 ptype 4 3 dot
	expand 1.2 putlabel 6 " Radio leading"

	relocate ( $($gx1+2650) $($gy1 + 1750) )
	expand 2.5 ptype 3 0 dot
	expand 1.2 putlabel 6 " X-ray leading "
	angle 0 
	location 6000 31000 6000 31000

	relocate ( 6000 2600 )
	if('$check' == 'rval') {
	   expand 1.2 putlabel 6 "Radio flux limit = "$checkval Jy
	} else {
	   expand 1.2 putlabel 6 "Optical mag. limit = "$checkval
	}

	relocate ( 6000 1600 )
	expand 1.2 putlabel 6 "Errorbars/Strips represent "$width" Poissonian \sigma"

	ctype 2
	lweight 3

#---------------------------------------------------------------------------
# selectstrip_frac  plot 3 models predictions, with choice of a_RX intervals
#                      Rescales actual number to fraction
selectstrip_frac

	echo "-----------------------------------------------------------"
	echo " histogram computed for the following intervals of a_RX:"
	echo " [1]     - 8.5  "
	echo " [2] 8.5 - 7.5 "
	echo " [3] 7.5 - 6.5 "
	echo " [4] 6.5 - 5.5 "
	echo " [5] 5.5 - 4.5 "
	echo " [6] 4.5 - 3.5 "
	echo " [7] 3.5 - 2.5  "  
	echo " [8] 2.5 -      "  
	echo "-----------------------------------------------------------"
	define which ?  { Which histogram [1-8] : }
	define colore ? {          Which Colour : }

	define long $(strlen('$which'))
	echo contributing bins are : $long

	set bfh = bh1*0
	set rfh = rh1*0
	set xfh = xh1*0

	if( $long == 1 ) {
	   set bfh = bh$which
	   set rfh = rh$which
	   set xfh = xh$which
	} else {
	   do i=1,$long {
	      define 2 $(substr('$which',$($i-1),1))
	      echo $2
	      set bfh = bfh + bh$2
	      set rfh = rfh + rh$2
	      set xfh = xfh + xh$2
	   }
	}

	location 6000 31000 6000 31000
	window 1 1 1 1
	define howmany ? { Howmany trial targets ?}
	define width   ? { Number of sigmas-strip to plot ?}

	define limite ? { Plot against Radio [1] or optlim [2] ?}
	if(substr('$limite',0,1) == '1') {
	    define check optval
	    define labx  <Radio Flux [Jy]>

	    define come ? {LOG [1] LIN [2] ? }
	    if(substr('$come',0,1) == '1') {
	      define plotx "(lg(rval))"
	      define xlim1 (lg(0.0008))
	      define xlim2 (lg(1.35))
	      ticksize -1 5 0 0 
	    } else { 
	      define plotx rval
	      define xlim1 0.0008
	      define xlim2 1.35
	      ticksize 0 0 0 0 
	    }
	} else {
	    define plotx optval
	    define check rval
	    define xlim1 23.5
	    define xlim2 16.5
	    ticksize 0.5 1 0 0
	    define labx  <Optical Magnitude>
	}

	expand 1.5 
	lweight 2
	ctype 2
	limits $xlim1 $xlim2 0 $howmany
	box
	xlabel $labx

	print '   %7.3f \n' <$check>
	define checkval ? {which value of the other limiting vector ?}

	if('$plotx' == 'optval') {
	   foreach var { ax ar ab } {
	     set dimen($var) = $nopt
	   }
	   do 1=0,$($nopt-1) {
	     set ab = bfh         if(rlim == $checkval)
	     set ar = rfh         if(rlim == $checkval)
	     set ax = xfh         if(rlim == $checkval)

	     set abtot = btot        if(rlim == $checkval)
	     set artot = rtot        if(rlim == $checkval)
	     set axtot = xtot        if(rlim == $checkval)
           }	      
	}

	if('$plotx' == 'rval' || '$plotx' == '(lg(rval))' ) {
	   foreach var { ax ar ab } {
	     set dimen($var)   = $nr
	   }
	   do 1=0,$($nr-1) {
	     set ab  = bfh         if(optlim == $checkval)
	     set ar  = rfh         if(optlim == $checkval)
	     set ax  = xfh         if(optlim == $checkval)

	     set abtot = btot      if(optlim == $checkval)
	     set artot = rtot      if(optlim == $checkval)
	     set axtot = xtot      if(optlim == $checkval)
           }	      
	}

	set bnfh     = $howmany*ab/abtot
	set rnfh     = $howmany*ar/artot
	set xnfh     = $howmany*ax/axtot
	set err_bnfh = $width*bnfh*sqrt(1/ab + 1/abtot)
	set err_rnfh = $width*rnfh*sqrt(1/ar + 1/artot)
	set err_xnfh = $width*xnfh*sqrt(1/ax + 1/axtot)

	set bnfh_u = bnfh + err_bnfh
	set bnfh_d = bnfh - err_bnfh
	set rnfh_u = rnfh + err_rnfh 
	set rnfh_d = rnfh - err_rnfh
	set xnfh_u = xnfh + err_xnfh
	set xnfh_d = xnfh - err_xnfh 

	#
	# plotto 
	#
	ctype $colore
	expand 2.5
	ptype 4 3 
	lweight 2

	ptype 4 0
	points  $plotx bnfh

	ptype 4 3 
	points  $plotx rnfh

	ptype 3 0
	points  $plotx xnfh

	define checkbrnfhs ? {Plot error on single points [y/n] ?}
	if(substr('$checkbrnfhs',0,1) == 'y') {
	   expand 0.8
	   error_y $plotx bnfh (bnfh_u-bnfh)
	   error_y $plotx rnfh (rnfh_u-rnfh)
	   error_y $plotx xnfh (xnfh_u-xnfh)
	}

	lweight 3
	ltype 1
	connect $plotx xnfh_u 
	connect $plotx xnfh_d
	ltype 2
	connect $plotx rnfh_u
	connect $plotx rnfh_d
	ltype 4
	connect $plotx bnfh_u
	connect $plotx bnfh_d
	ltype 0
	
	ctype 2 

	location 1000 6000 6000 31000
	lweight 2
	angle 90
	relocate ( $($gx1+ 250) $($gy1 + 1750) )
	expand 2.5 ptype 4 0 dot
	expand 1.2 putlabel 6 " Bolometric "

	relocate ( $($gx1+1450) $($gy1 + 1750) )
	expand 2.5 ptype 4 3 dot
	expand 1.2 putlabel 6 " Radio leading"

	relocate ( $($gx1+2650) $($gy1 + 1750) )
	expand 2.5 ptype 3 0 dot
	expand 1.2 putlabel 6 " X-ray leading "
	angle 0 
	location 6000 31000 6000 31000

	relocate ( 6000 2600 )
	if('$check' == 'rval') {
	   expand 1.2 putlabel 6 "Radio flux limit = "$checkval Jy
	} else {
	   expand 1.2 putlabel 6 "Optical mag. limit = "$checkval
	}

	relocate ( 6000 1600 )
	expand 1.2 putlabel 6 "Number of trial targets = "$howmany 
	relocate ( 6000  600 )
	expand 1.2 putlabel 6 "Errorbars/Strips represent "$width" Poissonian \sigma"


	ctype 2
	lweight 3

#---------------------------------------------------------------------------
# histo_h2
histo_h2

	set dum = { -9.5 -8.5 -7.5 -6.5 -5.5 -4.5 -3.5 -2.5 -1.5 }
	set dimen(xarx) = 8

	do i=0,7 {
	   set xarx[$i] = (dum[$i] + dum[$($i+1)])/2.
	}

	define colore ? { Which Colour ? }

	echo  " Optical and Radio Flux limits "
	print '   %5.2f   %5.3f \n' <optval rval>

	define ocut ? { Optical Limit ? }
	define rcut ? { Radio Limit ? }
	
	define flag (0)

	do i=0,$(dimen(rlim)-1) { 
	  if( rlim[$i] == $rcut && $flag == 0 ) {
	     do j=0,$($nopt-1) { 
		define k $($i+$j) 
		if( optlim[$k] == $ocut) { 
		   define kk $k 
		   define flag (1)
		}
	     }
	  }
	}

	echo $kk $(rlim[$kk]) $(optlim[$kk])

	set dimen(hx) = 8
	set dimen(hr) = 8
	set dimen(hb) = 8

	do i=0,7 {
	  define 1 $($i+1)
	  set hx[$i] = xh$1[$kk] 
	  set hr[$i] = rh$1[$kk] 
	  set hb[$i] = bh$1[$kk] 
	}

	set dumxarx = { -9.5 -9.5 -8.5 -8.5 -7.5 -7.5 \
			-6.5 -6.5 -5.5 -5.5 -4.5 -4.5 \
			-3.5 -3.5 -2.5 -2.5 -1.5 -1.5 }
	set dumx = < 0 $(hx[0]) $(hx[0]) $(hx[1]) $(hx[1]) $(hx[2]) $(hx[2]) $(hx[3]) $(hx[3]) $(hx[4]) $(hx[4]) $(hx[5]) $(hx[5]) $(hx[6]) $(hx[7]) $(hx[7]) $(hx[6]) 0 >
	set dumr = < 0 $(hr[0]) $(hr[0]) $(hr[1]) $(hr[1]) $(hr[2]) $(hr[2]) $(hr[3]) $(hr[3]) $(hr[4]) $(hr[4]) $(hr[5]) $(hr[5]) $(hr[6]) $(hr[7]) $(hr[7]) $(hr[6]) 0 >
	set dumb = < 0 $(hb[0]) $(hb[0]) $(hb[1]) $(hb[1]) $(hb[2]) $(hb[2]) $(hb[3]) $(hb[3]) $(hb[4]) $(hb[4]) $(hb[5]) $(hb[5]) $(hb[6]) $(hb[7]) $(hb[7]) $(hb[6]) 0 >

	window 1 1 1 1 
	location 6000 29000 6000 31000
	define howmany ? {howmany trial targets ?}

	define totx $(sum(hx))
	define totr $(sum(hr))
	define totb $(sum(hb))

	set xnfh1 = $howmany*hx/$totx
	set rnfh1 = $howmany*hr/$totr
	set bnfh1 = $howmany*hb/$totb

	set dumxnfh1 = $howmany*dumx/$totx
	set dumrnfh1 = $howmany*dumr/$totr
	set dumbnfh1 = $howmany*dumb/$totb

	set err_xnfh1 = $width*xnfh1*sqrt(1/xnfh1 + 1/$totx)
	set err_rnfh1 = $width*rnfh1*sqrt(1/rnfh1 + 1/$totr)
	set err_bnfh1 = $width*bnfh1*sqrt(1/bnfh1 + 1/$totb)

	ptype 4 3 
	expand 1.5 
	lweight 3
	ctype 2
	ticksize 0 0 0 0
	limits -9.8 -1.2 0 $howmany
	window 1 -3 1 1 
	expand 2.0

	xlabel F_{X}/F_{R} 
	relocate ( $gx1 $($gy1-2500) ) putlabel 6 LBL <--
	relocate ( $gx2 $($gy1-2500) ) putlabel 4 --> HBL
	expand 1.5

	relocate ( $($gx1+1000) $($gy2 - 1300) )
	ctype 5 
	expand 2.5 ptype 4 0 dot
	expand 1.5 putlabel 6 " X-ray leading"

	   expand 2.5
	   lweight 3
	   ptype 4 0
	   points   xarx xnfh1
	   error_y  xarx xnfh1 err_xnfh1
	   connect  dumxarx dumxnfh1
	
	ctype 2 expand 1.5
	box 1 2 0 0 

	#--------------------------
	expand 1.5 
	ctype 2
	ticksize 0 0 0 0
	limits -9.8 -1.2 0 $howmany
	window 1 -3 1 2 

	relocate ( $($gx1+1000) $($gy2 - 1300) )
	ctype 4 
	expand 2.5 ptype 4 3 dot
	expand 1.5 putlabel 6 " Radio leading"

	   expand 2.5
	   lweight 3
	   ptype 4 3 
	   points    xarx rnfh1
	   error_y   xarx rnfh1 err_rnfh1
	   connect  dumxarx dumrnfh1

	ctype 2 expand 1.5
	box 0 2 0 0 
	
	#--------------------------
	expand 1.5 
	lweight 3
	ctype 2
	ticksize 0 0 0 0
	limits -9.8 -1.2 0 $howmany
	window 1 -3 1 3 

	relocate ( $($gx1+1000) $($gy2 - 1300) )
	ctype 3 
	expand 2.5 ptype 3 0 dot
	expand 1.5 putlabel 6 " Bolometric"

	   expand 2.5
	   lweight 3
	   ptype 3 0
	   points    xarx bnfh1
	   error_y   xarx bnfh1 err_bnfh1
	   connect  dumxarx dumbnfh1

	ctype 2 expand 1.5
	box 0 2 0 0 
	ctype 2 

	#-----------------------

	lweight 3
	angle 90 
	relocate ( 1500 6000 )
	expand 1.2 putlabel 6 "Radio flux limit = "$rcut Jy
	relocate ( 3000 6000 )
	expand 1.2 putlabel 6 "Optical limit = "$ocut mag
	angle 0

	relocate ( 6000 1600 )

	window 1 1 1 1

#---------------------------------------------------------------------------
# select_logn_logs  plot 3 models predictions, with choice of a_RX intervals
select_logn_logs

	echo "-----------------------------------------------------------"
	echo " histogram computed for the following intervals of a_RX:"
	echo " [1]     - 8.5  "
	echo " [2] 8.5 - 7.5 "
	echo " [3] 7.5 - 6.5 "
	echo " [4] 6.5 - 5.5 "
	echo " [5] 5.5 - 4.5 "
	echo " [6] 4.5 - 3.5 "
	echo " [7] 3.5 - 2.5  "  
	echo " [8] 2.5 -      "  
	echo "-----------------------------------------------------------"
	define which ?  { Which histogram [1-8] : }

	define long $(strlen('$which'))
	echo contributing bins are : $long

	set bfh = bh1*0
	set rfh = rh1*0
	set xfh = xh1*0

	if( $long == 1 ) {
	   set bfh = bh$which
	   set rfh = rh$which
	   set xfh = xh$which
	} else {
	   do i=1,$long {
	      define 2 $(substr('$which',$($i-1),1))
	      echo $2
	      set bfh = bfh + bh$2
	      set rfh = rfh + rh$2
	      set xfh = xfh + xh$2
	   }
	}

	location 6000 31000 6000 31000
	window 1 1 1 1
	define width  ? { Number of sigmas-strip to plot ?}
	define limite ? { Plot against Radio [1] or optlim [2] ?}

	if(substr('$limite',0,1) == '1') {
	    define check optval
	    define labx  <Radio Flux [Jy]>

	    define come ? { LOG [1] LIN [2] ? }
	    if(substr('$come',0,1) == '1') {
	      define plotx "(lg(rval))"
	      define xlim1 (lg(0.0008))
	      define xlim2 (lg(1.35))
	      ticksize -1 5 0 0 
	    } else { 
	      define plotx rval
	      define xlim1 0.0008
	      define xlim2 1.35
	      ticksize 0 0 0 0 
	    }
	} else {
	    define plotx optval
	    define check rval
	    define xlim1 23.5
	    define xlim2 16.5
	    ticksize 0.5 1 0 0
	    define labx  <Optical Magnitude>
	}

	print '   %7.3f \n' <$check>
	define checkval ? { Which value of the other limiting vector ?}

	if('$plotx' == 'optval') {
	   foreach var { ax ar ab } {
	     set dimen($var) = $nopt
	   }
	   do 1=0,$($nopt-1) {
	     set ab = bfh         if(rlim == $checkval)
	     set ar = rfh         if(rlim == $checkval)
	     set ax = xfh         if(rlim == $checkval)
           }	      
	}

	if('$plotx' == 'rval' || '$plotx' == '(lg(rval))' ) {
	   foreach var { ax ar ab } {
	     set dimen($var)   = $nr
	   }
	   do 1=0,$($nr-1) {
	     set ab  = bfh        if(optlim == $checkval)
	     set ar  = rfh        if(optlim == $checkval)
	     set ax  = xfh        if(optlim == $checkval)
           }	      
	}

	echo  
	echo
	define cumul ? { Integrated or differential [1/2] :}
	define ylim1 (-3.8)
	define ylim2 (-0.3)
	if( $cumul == 2 ) {
	   echo " Not ready yet ...."
	   # foreach var < ab ar ax > {
	   #    set dum1 = reverse($var)
	   #    set dum2 = cumulate(dum1)
	   #    set $var = reverse(dum2)
	   # }
	   # define ylim1 (-3.2)
	   # define ylim2 (-0.3)
	   # define laby "dN/dF_R [deg^{-2}]"
	} else {
	   define ylim1 (-3.8)
	   define ylim2 (-0.3)
	   define laby "N(>F_R) [deg^{-2}]"
	}

	define omega (1.e4)
	set bnfh     = lg(ab/$omega)
	set rnfh     = lg(ar/$omega)
	set xnfh     = lg(ax/$omega)
	set err_bnfh_u = lg(1 + $width*1./sqrt(ab))
	set err_rnfh_u = lg(1 + $width*1./sqrt(ar))
	set err_xnfh_u = lg(1 + $width*1./sqrt(ax))
	set err_bnfh_d = lg(1./(1 - $width/sqrt(ab)))
	set err_rnfh_d = lg(1./(1 - $width/sqrt(ar)))
	set err_xnfh_d = lg(1./(1 - $width/sqrt(ax)))

	set bnfh_u = bnfh + err_bnfh_u
	set bnfh_d = bnfh - err_bnfh_d
	set rnfh_u = rnfh + err_rnfh_u
	set rnfh_d = rnfh - err_rnfh_d
	set xnfh_u = xnfh + err_xnfh_u
	set xnfh_d = xnfh - err_xnfh_d

	vecminmax bnfh_u a1 b1
	vecminmax rnfh_u a2 b2
	vecminmax xnfh_u a3 b3
	set down = < $a1 $a2 $a3 >
	set up   = < $b1 $b2 $b3 >
	vecminmax up a b

	#
	# plotto 
	#
	expand 1.5 
	lweight 3
	ctype 2
	limits $xlim1 $xlim2 $ylim1 $ylim2
	##limits -3.2 -0.9 -4.1 -1.1
	ticksize -1 0 -1 0 
	box
	xlabel $labx
	ylabel          $laby

	define pieno ? {      PTYPE filled or empty [0/3] :}
	ctype 2
	expand 2.5
	ptype 4 $pieno
	lweight 2

	#-------------------------------------------------------
	ctype 2
	lweight 3
	ltype 0
	connect $plotx bnfh_u
	connect $plotx bnfh_d

	connect $plotx rnfh_u
	connect $plotx rnfh_d

	ltype 2
	connect $plotx xnfh_u 
	connect $plotx xnfh_d
	ltype 0
	
	#-------------------------------------------------------
	expand 3
	lweight 3
	ctype 4 
	ctype 2
	ptype 4 3 
	points  $plotx bnfh

	# ctype 3
        ptype 4 3 
        ctype 1
        expand 2.2
        points $plotx rnfh
        ptype 4 0
        ctype 2
        expand 3
        points $plotx rnfh

	# ctype 5
        ptype 4 1
        angle 45 expand 4 lweight 4
        points $plotx xnfh
        angle 0 lweight 3 

	define checkbrnfhs ? { Plot error on single points [y/n] ?}
	if(substr('$checkbrnfhs',0,1) == 'y') {
	   expand 0.8
	   ctype 4 
	   errorbar $plotx bnfh err_bnfh_u 2 
	   errorbar $plotx bnfh err_bnfh_d 4 

	   ctype 3
	   errorbar $plotx rnfh err_rnfh_u 2 
	   errorbar $plotx rnfh err_rnfh_d 4 

	   ctype 5
	   errorbar $plotx xnfh err_xnfh_u 2 
	   errorbar $plotx xnfh err_xnfh_d 4 
	}

	# lweight 3
	# ltype 0
	# if( $pieno == 0 ) { ltype 2 }
	# ctype 4
	# connect $plotx bnfh_u
	# connect $plotx bnfh_d
	#
	# ctype 3 
	# connect $plotx rnfh_u
	# connect $plotx rnfh_d
	#
	# ctype 5 
	# connect $plotx xnfh_u 
	# connect $plotx xnfh_d
	# ltype 0
	#	
	# ctype 2 
	#
	# location 1000 6000 6000 31000
	# lweight 2
	# angle 90
	# relocate ( $($gx1+ 250) $($gy1 + 1750) )
	# ctype 4 lweight 3 
	# expand 2.5 dot
	# expand 1.2 putlabel 6 " Bolometric "
	#
	# relocate ( $($gx1+1450) $($gy1 + 1750) )
	# ctype 3  lweight 3 
	# expand 2.5 dot
	# expand 1.2 putlabel 6 " Radio leading"
	#
	# relocate ( $($gx1+2650) $($gy1 + 1750) )
	# ctype 5 lweight 3 
	# expand 2.5 dot
	# expand 1.2 putlabel 6 " X-ray leading "
	# angle 0 
	# location 6000 31000 6000 31000

	ctype 2 

	lweight 2
	angle 0
	ctype 2

	relocate ( $($gx2 - 2000) $($gy2 - 1250*2) )
	lweight 3 
	expand 1.25
	putlabel 4 " Radio leading "

	relocate ( $($gx2 - 2000) $($gy2 - 1250*3) )
	lweight 3 
	expand 1.25
	putlabel 4 " Bolometric "

	relocate ( $($gx2 - 2000) $($gy2 - 1250*4) )
	lweight 3 
	expand 1.25 
	putlabel 4 " X-ray leading "

	relocate ( $($gx2 - 1500) $($gy2 - 1250*2) )
	expand 3
	ptype 4 0 
	dot 

	relocate ( $($gx2 - 1500) $($gy2 - 1250*3) )
	expand 3
	ptype 4 3 
	dot 

	relocate ( $($gx2 - 1500) $($gy2 - 1250*4) )
	expand 4
	lweight 4
	angle 45
	ptype 4 1 
	dot 
	expand 2.5
	lweight 3
	angle 0

	relocate ( 6000 2600 )
	if('$check' == 'rval') {
	   expand 1.2 putlabel 6 "Radio flux limit = "$checkval Jy
	} else {
	   expand 1.2 putlabel 6 "Optical mag. limit = "$checkval
	}

	if( $width > 0 ) {
	relocate ( 6000 1600 )
	   expand 1.2 
	   putlabel 6 "Errorbars/Strips represent "$width" Poissonian \sigma"
	}
	ctype 2
	lweight 3

#---------------------------------------------------------------------------
